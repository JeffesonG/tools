---
- name: Preparing Workstation
  hosts: localhost
  connection: local
  tasks:

    - name: Installing Linux Apps
      become: true
      apt:
        name: '{{ item }}'
        install_recommends: yes
        state: present
      loop:
          - vim
          - htop
          - curl
          - wget
          - ncdu
          - tree
          - apt-transport-https
          - ca-certificates
          - gnupg
          - python3-pip
          - make
          - git
          - bash-completion
          - gnupg-agent
          - zsh
          - flameshot
          - fonts-hack
          - tilix
          - virtualbox
          - mlocate
          - krita
          - jq
          - mtr

    - block:
      - name: Verify if Oh-My-zsh is installed
        command: test -d /home/{{ ansible_user_id }}/.oh-my-zsh
        register: ohmyzsh
        ignore_errors: true
      - name: Installing Oh-My-zsh
        shell:
          cmd: 'curl -fsL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh | bash'
          warn: false
        when: ohmyzsh.rc != 0
      - name: Changing Default Shell to ZSH
        become: yes
        user: 
          name: '{{ ansible_user_id }}'
          shell: /bin/zsh 
      - name: Changing Default ZSH Theme to Agnoster
        lineinfile:
          path: /home/{{ ansible_user_id }}/.zshrc
          regexp: '^ZSH_THEME='
          line: 'ZSH_THEME="agnoster"'
      - name: Creating ZSH Completion folder
        file:
          path: /home/{{ ansible_user_id }}/.oh-my-zsh/completions
          state: directory
          mode: 0755
      - name: Adding autoload to compinit
        lineinfile:
          path: /home/{{ ansible_user_id }}/.zshrc
          line: 'autoload -U compinit && compinit'
          state: present

    - name: Installing AWS CLI via pip3
      become: true
      pip:
        name: awscli
        executable: pip3

    - block:
      - name: Install Google Key
        become: true
        apt_key: 
          url: 'https://dl.google.com/linux/linux_signing_key.pub'
          state: present
      - name: Install Google Repository
        become: true
        apt_repository:
          repo: 'deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main'
          state: present
          filename: google-chrome
      - name: Install Google Chrome
        become: true
        apt:
          name: google-chrome-stable

    - block:
      - name: Add Docker GPG key
        apt_key:
          url: https://download.docker.com/linux/ubuntu/gpg
          state: present
  
      - name: Add Docker APT repository
        apt_repository:
          repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable
          state: present
  
      - name: Install Docker
        apt:
          name: docker-ce
          state: present
  
      - name: Add HashiCorp GPG key
        apt_key:
          url: https://apt.releases.hashicorp.com/gpg
          state: present
  
      - name: Add HashiCorp APT repository
        apt_repository:
          repo: deb [arch=amd64] https://apt.releases.hashicorp.com {{ ansible_distribution_release }} main
          state: present
  
      - name: Install HashiCorp tools
        apt:
          name: "{{ item }}"
          state: present
        loop:
          - terraform
          - vagrant
          - vault
  
      - name: Install Docker Compose
        command: >
          curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" 
          -o /usr/local/bin/docker-compose && chmod +x /usr/local/bin/docker-compose
  
      - name: Install Minikube
        command: >
          curl -Lo minikube https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64 && 
          chmod +x minikube && mv minikube /usr/local/bin/
  
      - name: Install Kubectl
        command: >
          curl -LO "https://dl.k8s.io/release/v1.22.2/bin/linux/amd64/kubectl" && 
          chmod +x kubectl && mv kubectl /usr/local/bin/
